{"version":3,"file":"vue.js","sources":["../src/compile/generate.js","../src/compile/parseAst.js","../src/compile/index.js","../src/observe/arr.js","../src/observe/index.js","../src/initState.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\r\n *\r\n * <div id=\"app\" class=\"add num\">xin {{msg}}<span>988</span></div>\r\n * _c(div,{id:app},_v('xin' + _s(msg)),_c)\r\n *\r\n *\r\n */\r\nfunction genPorps(attrs) {\r\n  // console.log(attrs)\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.name === 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').forEach((item) => {\r\n        if (item) {\r\n          let [key, value] = item.split(':')\r\n          obj[key] = value\r\n        }\r\n      })\r\n      // style=\"color:#f00;font-size:20px;\"\r\n      //          ||\r\n      // {color: '#f00', font-size: '20px'}\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nexport function generate(ast) {\r\n  let code = `_c(${ast.tag},${\r\n    ast.attrs.length ? `${genPorps(ast.attrs)}` : null\r\n  })`\r\n  console.log(code)\r\n}\r\n","// 标签名\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\n// <span:xx>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n// 开始标签\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\n// 结束标签\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n// 属性  第一个分组是属性的key  value在分组 3/4/5中\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n// <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/\r\n// {{}}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// 创建一个ast对象\r\nfunction createASTElement(tag, attrs) {\r\n  return {\r\n    tag, //元素\r\n    attrs, //属性\r\n    children: [], //子节点\r\n    type: 1, //元素类型(标签 1)\r\n    parent: null\r\n  }\r\n}\r\n\r\nlet root //根元素\r\nlet currentParent //当前的父亲\r\nlet stack = []\r\n\r\nfunction start(tag, attrs) {\r\n  // 开始标签\r\n  // console.log('开始标签', tag, attrs)\r\n  let element = createASTElement(tag, attrs)\r\n  if (!root) {\r\n    root = element\r\n  }\r\n  currentParent = element\r\n  stack.push(element)\r\n}\r\nfunction charts(text) {\r\n  // 文本\r\n  // console.log('文本', text)\r\n  text = text.replace(/s/g, '')\r\n  if (text) {\r\n    currentParent.children.push({\r\n      type: 3, //元素类型(文本 3)\r\n      text\r\n    })\r\n  }\r\n}\r\nfunction end(tag) {\r\n  // 结束标签\r\n  // console.log('结束标签', tag)\r\n  let element = stack.pop()\r\n  currentParent = stack[stack.length - 1]\r\n\r\n  if (currentParent) {\r\n    element.parent = currentParent.tag\r\n    currentParent.children.push(element)\r\n  }\r\n}\r\n\r\nexport function parseHTML(html) {\r\n  while (html) {\r\n    // 判断标签\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd === 0) {\r\n      // 1) 开始标签\r\n      const startTagMatch = parseStartTag()\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      // 2) 结束标签\r\n      let endTagMatch = html.match(endTag)\r\n      // console.log(endTagMatch)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n        continue\r\n      }\r\n    }\r\n    // 文本\r\n    let text\r\n    if (textEnd > 0) {\r\n      // console.log(textEnd)\r\n      // 获取文本内容\r\n      text = html.substring(0, textEnd)\r\n      charts(text)\r\n      // console.log(text)\r\n    }\r\n    if (text) {\r\n      advance(text.length)\r\n    }\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    if (start) {\r\n      // console.log(start)\r\n      // 创建ast语法树\r\n      let match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      // 删除开始标签 <div\r\n      advance(start[0].length)\r\n      let attr, end\r\n      // 处理属性\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5]\r\n        })\r\n        // 删除属性\r\n        advance(attr[0].length)\r\n        // break\r\n      }\r\n      if (end) {\r\n        // 删掉 >\r\n        advance(end[0].length)\r\n        return match\r\n      }\r\n    }\r\n  }\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n    // console.log(html)\r\n  }\r\n  // console.log(root)\r\n  return root\r\n}\r\n","import { generate } from './generate'\r\nimport { parseHTML } from './parseAst'\r\n\r\nexport function compileToFunction(el) {\r\n  console.log(el)\r\n  // 1） 将HTML 变成 ast语法树\r\n  let ast = parseHTML(el)\r\n  console.log('ast', ast)\r\n  // 2） 将ast语法树变成render函数\r\n  // 2-1)ast语法树变成字符串\r\n  // 2-2)字符串变成函数\r\n  let code = generate(ast)\r\n  console.log('code', code)\r\n}\r\n","// 重写数组方法\r\n\r\n// 1) 获取原来数组的方法\r\nlet oldArrayProtoMethods = Array.prototype\r\n// 2) 继承\r\nexport let ArrayMethods = Object.create(oldArrayProtoMethods)\r\n// 3）函数劫持\r\nlet methods = ['push', 'pop', 'unshift', 'shift', 'splice', 'sort', 'reverse']\r\n\r\nmethods.forEach((method) => {\r\n  ArrayMethods[method] = function (...args) {\r\n    console.log('数组劫持', args)\r\n    const result = oldArrayProtoMethods[method].apply(this, args)\r\n    // 对数组中新增的数据 进行劫持\r\n    let inserted //新增的内容\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    let ob = this.__ob__\r\n    if (inserted) {\r\n      // 对新增的内容进行劫持\r\n      ob.observeArray(inserted)\r\n    }\r\n    return result\r\n  }\r\n})\r\n","import { ArrayMethods } from './arr'\r\nexport function observer(data) {\r\n  if (typeof data !== 'object' || data === null) {\r\n    // data不是对象或者data为空 不劫持\r\n    return data\r\n  }\r\n\r\n  console.log('劫持data:', data)\r\n  return new Observer(data)\r\n}\r\n\r\nclass Observer {\r\n  constructor(value) {\r\n    // 给 value 添加一个属性\r\n    Object.defineProperty(value, '__ob__', {\r\n      enumerable: false, //不可枚举\r\n      value: this\r\n    })\r\n    // value.__ob__ = this //副作用 给数据加了一个标识上有__ob__ 则说明这个属性被观测过\r\n\r\n    // 判断是不是数组\r\n    if (Array.isArray(value)) {\r\n      console.log('数组', value)\r\n      // 重写数组 的部分方法\r\n      value.__proto__ = ArrayMethods\r\n      // 数组里面包含对象\r\n      this.observeArray(value) //[{a:1}]\r\n    } else {\r\n      this.walk(value)\r\n    }\r\n  }\r\n  walk(data) {\r\n    let keys = Object.keys(data)\r\n    // console.log('keys', keys)\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i]\r\n      const value = data[key]\r\n      // 对每一个属性进行劫持\r\n      defineReactive(data, key, value)\r\n    }\r\n  }\r\n  observeArray(arr) {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      observer(arr[i])\r\n    }\r\n  }\r\n}\r\n// 对对象中的属性进行劫持\r\nfunction defineReactive(data, key, value) {\r\n  observer(value) //深度递归劫持\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      console.log('获取', key)\r\n      return value\r\n    },\r\n    set(newVal) {\r\n      console.log('设置', newVal)\r\n      if (newVal === value) return\r\n      observer(newVal) //对设置的值 进行劫持\r\n      value = newVal\r\n    }\r\n  })\r\n}\r\n","import { observer } from './observe/index'\r\nexport function initState(vm) {\r\n  let ops = vm.$options\r\n  // console.log('ops', ops)\r\n  if (ops.data) {\r\n    initData(vm)\r\n  }\r\n  if (ops.props) {\r\n    initProps()\r\n  }\r\n  if (ops.watch) {\r\n    initWatch()\r\n  }\r\n  if (ops.computed) {\r\n    initComputed()\r\n  }\r\n  if (ops.methods) {\r\n    initMethods()\r\n  }\r\n}\r\n\r\nfunction initData(vm) {\r\n  // console.log('vm:data初始化', vm)\r\n  let data = vm.$options.data\r\n  // 对象或者函数\r\n  if (typeof data === 'object' && data !== null) {\r\n    data = data\r\n  } else if (typeof data === 'function') {\r\n    data = data.call(vm)\r\n  } else {\r\n    console.error('data type error')\r\n    return false\r\n  }\r\n  vm._data = data\r\n\r\n  // 将data上的属性代理到实例上 vm.msg = vm._data.msg\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n  // 对data数据进行劫持\r\n  observer(data)\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key]\r\n    },\r\n    set(newVal) {\r\n      vm[source][key] = newVal\r\n    }\r\n  })\r\n}\r\n\r\nfunction initProps() {}\r\nfunction initWatch() {}\r\nfunction initComputed() {}\r\nfunction initMethods() {}\r\n","import { compileToFunction } from './compile/index'\r\nimport { initState } from './initState'\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // console.log('options', options)\r\n    let vm = this\r\n    vm.$options = options\r\n    // 初始化状态\r\n    initState(vm)\r\n    // 模板渲染\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    let vm = this\r\n    let options = vm.$options\r\n    if (!options.render) {\r\n      // 没有render\r\n      let template = options.template\r\n      if (!template) {\r\n        //没有template\r\n        if (el) {\r\n          // 获取HTML\r\n          el = document.querySelector(el).outerHTML\r\n          // 变成ast语法树\r\n          let ast = compileToFunction(el)\r\n          // render()\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\n\r\nfunction Vue(options) {\r\n  // 初始化\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\n\r\nexport default Vue\r\n"],"names":["genPorps","attrs","str","i","length","attr","name","obj","value","split","forEach","item","key","JSON","stringify","slice","generate","ast","code","tag","console","log","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createASTElement","children","type","parent","root","currentParent","stack","start","element","push","charts","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","match","advance","substring","n","compileToFunction","el","oldArrayProtoMethods","Array","prototype","ArrayMethods","Object","create","methods","method","args","result","apply","inserted","ob","__ob__","observeArray","observer","data","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","arr","get","set","newVal","initState","vm","ops","$options","initData","props","watch","computed","call","error","_data","proxy","source","initMixin","Vue","_init","options","$mount","render","template","document","querySelector","outerHTML"],"mappings":"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"}